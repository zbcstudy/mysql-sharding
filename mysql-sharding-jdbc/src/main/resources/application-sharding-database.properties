# datasource
spring.shardingsphere.datasource.names=ds0,ds1

spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name= com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://10.0.0.131:3306/test1
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=sneakerhead


spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name= com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://10.0.0.131:3306/test2
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=sneakerhead

# 分片策略
spring.shardingsphere.sharding.tables.user.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.user.database-strategy.inline.algorithm-expression=ds${id%2}

spring.shardingsphere.sharding.tables.user_detail.database-strategy.inline.sharding-column=u_id
spring.shardingsphere.sharding.tables.user_detail.database-strategy.inline.algorithm-expression=ds$->{u_id%2}

# id 采用雪花算法 UUID SNOWFLAKE
spring.shardingsphere.sharding.tables.user.key-generator.column=id
#spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.user.key-generator.type=LAGOU

spring.shardingsphere.sharding.tables.user_detail.key-generator.column=id
spring.shardingsphere.sharding.tables.user_detail.key-generator.type=SNOWFLAKE


# 广播表 一些表的数据不需要分片 每个库中都存一份
spring.shardingsphere.sharding.broadcast-tables=city
spring.shardingsphere.sharding.tables.city.key-generator.column=id
spring.shardingsphere.sharding.tables.city.key-generator.type=SNOWFLAKE


## 分库+分表 先按company_id进行分库 再按id进行分表
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=company_id
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=ds$->{company_id%2}

spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order${id%2}
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds${0..1}.t_order${0..1}

spring.shardingsphere.sharding.tables.t_order.key-generator.column=id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE

